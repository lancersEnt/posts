extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.3",
        import: ["@key", "@shareable"])

directive @external on OBJECT | FIELD_DEFINITION

scalar DateTime
scalar GraphQLUpload

extend type User @key(fields: "id"){
  id: ID!
  posts: [Post!]
}

extend type Klad @key(fields: "id"){
  id: ID
}

type Post @key(fields: "id"){
  # Example field (placeholder)
  id: ID!
  content: String!
  type: String!
  videoUrl:String
  documentUrl:String
  imageUrl: String
  postId: String
  kladId: String
  authorId: String!
  user: User
  likersIds:[String]
  likers: [User]
  subscribersIds:[String]
  subscribers: [User]
  shares: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input CreatePostInput {
  # Example field (placeholder)
  content: String!
  type: String!
  videoUrl:String
  documentUrl:String
  imageUrl: String
  postId: String
  kladId: String
  authorId: String!
  createdAt: DateTime
}

input UpdatePostInput {
  content: String
  type: String
  videoUrl:String
  documentUrl:String
  imageUrl: String
  authorId: String
  updatedAt: DateTime
}
 

extend type Query {
  posts: [Post]!
  post(id: String!): Post
  userPosts(id: String!): [Post]!
  feed(page: Int!): Feed
  search(text:String): [Post]!
}


type Mutation {
  createPost(createPostInput: CreatePostInput!): Post!
  updatePost(id: String!, updatePostInput: UpdatePostInput!): Post!
  removePost(id: String!): Post
  likePost(postId:String!):Post
  unlikePost(postId:String!):Post

}

